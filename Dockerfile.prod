# Dockerfile.prod - Versi√≥n segura DevSecOps
FROM node:18-alpine AS builder

# Metadata de seguridad
LABEL maintainer="tu-email@empresa.com"
LABEL security.scan="enabled"
LABEL version="1.0.0"

# Actualizar sistema operativo y instalar herramientas (consolidado)
RUN apk update && apk upgrade && apk add --no-cache dumb-init=1.2.5-r3

WORKDIR /app

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar dependencias de producci√≥n solamente
RUN npm ci --only=production --no-audit --no-fund

# Auditar dependencias (no fallar por vulnerabilidades para demo)
RUN npm audit --audit-level=critical --production || echo "‚ö†Ô∏è Vulnerabilidades encontradas - revisar en producci√≥n real"

# Copiar c√≥digo fuente (preservando estructura exacta)
COPY src ./src

# Etapa de producci√≥n
FROM node:18-alpine AS production

# Instalar dumb-init para manejo seguro de procesos (versi√≥n espec√≠fica)
RUN apk add --no-cache dumb-init=1.2.5-r3

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Crear directorio de aplicaci√≥n
WORKDIR /app

# Copiar archivos necesarios como usuario nodejs
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package.json ./
COPY --chown=nodejs:nodejs src ./src

# Verificar estructura de archivos (para debug)
RUN echo "üìÅ Estructura de archivos copiados:" && \
    find src -type f -name "*.js" | sort && \
    echo "üìÅ Contenido de src/:" && \
    ls -la src/ && \
    echo "üìÅ Verificando Routes/:" && \
    ls -la src/Routes/ 2>/dev/null || echo "‚ùå src/Routes/ no existe" && \
    echo "üìÅ Verificando routes/:" && \
    ls -la src/routes/ 2>/dev/null || echo "‚ùå src/routes/ no existe"

# Crear directorios necesarios
RUN mkdir -p logs tmp && \
    chown -R nodejs:nodejs logs tmp

# Configurar permisos seguros
RUN chmod -R 755 /app && \
    chmod -R 644 /app/src && \
    chmod 755 /app/src

# Remover herramientas innecesarias por seguridad
RUN rm -rf /tmp/* /var/cache/apk/* /root/.npm

# Cambiar a usuario no-root
USER nodejs

# Exponer puerto
EXPOSE 3000

# Variables de entorno de seguridad
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV NPM_CONFIG_LOGLEVEL=warn
ENV PORT=3000

# Usar dumb-init para manejo seguro de procesos
ENTRYPOINT ["dumb-init", "--"]

# Comando para ejecutar la aplicaci√≥n
CMD ["node", "src/index.js"]